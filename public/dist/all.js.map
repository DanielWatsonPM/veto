{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["\n/**\n * Ensphere Container\n */\n$.fn.ensphere = function() {\n\n    /**\n     * Veto\n     */\n    this.veto = function() {\n\n        /**\n         *\n         * @param errors\n         * @param modal\n         */\n        var modalError = function( errors, modal )\n        {\n            var wrapper = $('<div class=\"alert alert-danger\" role=\"alert\"><div class=\"header\">There was some errors with your submission</div><ul class=\"list\"></ul></div>');\n            errors.forEach(function(error){\n                $('<li />').text(error).appendTo( $( 'ul', wrapper ) );\n            });\n            $('[data-for=\"error-wrapper\"]', modal).html('').append(wrapper);\n            modal.semanticUiModal('refresh');\n        };\n\n        /**\n         *\n         * @param node\n         * @param _callbacks\n         */\n        this.modalEdit = function( node, _callbacks )\n        {\n            var form = $(node).parents( 'form:eq(0)' );\n            _callbacks = _callbacks || {};\n            var callbacks = $.extend({\n                onVisible   : function(){},\n                onComplete  : function(){},\n                onError     : function(){},\n                onSave      : function(){},\n                onResponse  : function(){},\n                closeModal  : true\n            }, _callbacks);\n            var attributes = $.fn.ensphere.veto.getAttributes( node );\n            $.get( attributes.href, function( response ) {\n                callbacks.onResponse( response, attributes );\n                if( typeof $( response )[0].ownerDocument !== 'undefined' ) {\n                    $.fn.ensphere.veto.modalResponse( response, attributes, callbacks );\n                }\n            });\n        };\n\n        /**\n         *\n         * @param node\n         * @returns {{}}\n         */\n        this.getAttributes = function( node )\n        {\n            var attributes = {};\n            for( var i in node.attributes ) {\n                if( node.attributes.hasOwnProperty( i ) ) {\n                    attributes[node.attributes[i].name] = node.attributes[i].nodeValue;\n                }\n            }\n            return attributes;\n        };\n\n        /**\n         *\n         * @param response\n         * @param attributes\n         * @param callbacks\n         */\n        this.modalResponse = function( response, attributes, callbacks ){\n            if( typeof modal !== 'undefined' ) {\n                modal.semanticUiModal('close');\n            }\n            modal = $(response);\n            modal.semanticUiModal({\n                observeChanges : false,\n                onVisible : function() {\n                    var modalObj = $(this);\n                    var buttons = $('.ui.button, .btn.btn-success', modalObj);\n                    var _token = $('[name=\"_token\"]', modalObj).val();\n                    var form = $('form', modalObj);\n\n                    buttons.each(function(){\n                        $(this).click( function(e){\n                            var button = $(this);\n                            e.preventDefault();\n                            if( form.length && button[0].tagName.toLowerCase() === 'button' ) {\n                                var action = form.attr('action');\n                            } else {\n                                var action = $(this).attr('href');\n                            }\n                            callbacks.onSave( $(this), modalObj );\n                            var ajaxOptions = {\n                                type: 'GET',\n                                async: false,\n                                url: action,\n                                data : $('input, select, textarea', form).not('[name=\"_token\"]').serialize(),\n                                success: function( response ){\n                                    if( $(response)[0].id ) {\n                                        callbacks.onComplete( response, attributes, modal );\n                                    } else {\n                                        modalResponse( response, attributes, callbacks );\n                                    }\n                                },\n                                error: function ( xhr, textstatus, errorThrown ) {\n                                    switch( xhr.status ) {\n                                        case 422 :\n                                            var errors = [];\n                                            /** Validation error */\n                                            var response = JSON.parse( xhr.responseText );\n                                            for( var i in response ) {\n                                                errors.push( response[i][0] );\n                                            }\n                                            modalError( errors, modal );\n                                            break;\n                                        case 403 :\n                                            modalError( [\"Request middleware denied this action\"], modal );\n                                            break;\n                                        default :\n                                            modalError( ['Unknown error has occurred: [\"' + xhr.status + '\",\"' + textstatus + '\"]'], modal );\n                                            break;\n                                    }\n                                    callbacks.onError( modalObj, xhr );\n                                }\n                            };\n                            if( form.length ) {\n                                ajaxOptions.headers = { 'X-CSRF-TOKEN' : _token };\n                                ajaxOptions.type = 'POST';\n                            }\n                            $.ajax(ajaxOptions);\n                        });\n                    });\n                    callbacks.onVisible( modalObj );\n                }\n            }).semanticUiModal('show');\n        };\n\n        return this;\n    };\n\n    return this;\n\n};\n"]}